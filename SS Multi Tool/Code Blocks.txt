            Split notes, adjust for different formatting

using System.Text.RegularExpressions;

var lineSplit = Regex.Matches(line, "([^|]+)");
x = decimal.Parse(lineSplit[0].Value);
y = decimal.Parse(lineSplit[1].Value);
time = decimal.Parse(lineSplit[2].Value);


            Identify line of exception within catch

using System.Diagnostics;

var st = new StackTrace(ex, true);
var frame = st.GetFrame(st.FrameCount-1);
var line = frame.GetFileLineNumber();
Console.WriteLine(line);


            Open File

openFileDialog1.FileName = "";
openFileDialog1.Filter = "Text Documents (*.txt)|*.txt|All Files (*.*)|*.*";
openFileDialog1.ShowDialog();
string filename = openFileDialog1.FileName;
try
{
    string readfile = File.ReadAllText(filename);
    Input.Text = readfile;
    if (Input.Text.Substring(0, 2) == "PK")
    {
        MessageBox.Show("Please extract the '.zip' file before attempting to load files from it.", "", MessageBoxButtons.OK, MessageBoxIcon.Warning);
        Input.Text = "";
    }
    else if (Input.Text.Length < 10)
    {
        MessageBox.Show("No valid file was selected for loading.", "", MessageBoxButtons.OK, MessageBoxIcon.Error);
        Input.Text = "";
    }
}
catch
{
    Input.Text = "";
}


            Save File

try
{
    saveFileDialog1.Filter = "Text Documents (*.txt)|*.txt|All Files (*.*)|*.*";
    saveFileDialog1.DefaultExt = "txt";
    saveFileDialog1.Title = "Save as";
    saveFileDialog1.ShowDialog();
    TextWriter txt = new StreamWriter(saveFileDialog1.FileName);
    txt.Write(Output.Text);
    txt.Close();
    MessageBox.Show("The data has been successfully exported.");
}
catch
{

}


            Paste Data

Input.Text = Clipboard.GetText();


            Copy Data

if (Output.Text != "")
{
    Clipboard.SetText(Output.Text);
}


            Region Checker

bool international = true;
string numint = "50,000";
decimal numTest = decimal.Parse(numint);
if (numTest == 50000)
{
    international = false;
}


            Download data from link

string data = Input.Text;
SecureWebClient wc = new SecureWebClient();
try
{
    while (true)
    {
        data = wc.DownloadString(data);
    }
}
catch
{
                        
}


            Beat Hop check function

public static bool CheckBH(string[] data)
{
    bool bhmap = false;
    bool negative = false;
    bool lanes = true;
    bool lowersecondtime = false;
    bool lowerdigits = true;
    decimal x;
    decimal y;
    decimal time;
    decimal? firsttime = null;
    int firstdigits = 0;
    foreach (var line in data)
    {
        var lineSplit = Regex.Matches(line, "([^|]+)");
        x = decimal.Parse(lineSplit[0].Value);
        y = decimal.Parse(lineSplit[1].Value);
        time = decimal.Parse(lineSplit[2].Value);
        int digits = (int)Math.Floor(Math.Log10(Math.Abs((double)time)) + 1);
        if (time < 0)
        {
            negative = true;
        }
        if (y < -1 || y > 1 || !int.TryParse(y.ToString(), out _))
        {
            lanes = false;
        }
        if (firsttime != null && firsttime > time)
        {
            lowersecondtime = true;
        }
        else if (firsttime == null)
        {
            firsttime = time;
            firstdigits = digits;
        }
        if (digits > firstdigits)
        {
            lowerdigits = false;
        }
    }
    if (negative == true && lanes == true && lowersecondtime == true && lowerdigits == true)
    {
        bhmap = true;
    }
    return bhmap;
}


            Convert Beat Hop to Sound Space

List<string> finaldata = new List<string>();
bool BH = CheckBH(newdata);
if (BH)
{
    long num = 0L;
    long num2 = 0L;
    foreach (var line in newdata)
    {
        var lineSplit = Regex.Matches(line, "([^|]+)");
        float num3 = float.Parse(lineSplit[0].Value);
        float num4 = float.Parse(lineSplit[1].Value);
        long num5 = long.Parse(lineSplit[2].Value);
        long num6;
        if (num == 0L)
        {
            num2 = num5;
            num6 = num5;
        }
        else
        {
            num6 = num2 + num5;
            if (num6 != num2)
            {
                num2 = num6;
            }
        }
        num += num6;
        num5 = num;
        finaldata.Add(num3 + "|" + num4 + "|" + num5);
    }
}
else 
{
    finaldata = newdata.ToList();
}


            Convert Sound Space to Beat Hop

int timec = 0;
List<decimal> times = new List<decimal>();
foreach (var line in newdata)
{
    var lineSplit = Regex.Matches(line, "([^|]+)");
    time = decimal.Parse(lineSplit[2].Value);
    times.Add(time);
}

time = times[timec];
if (timec - 1 >= 0)
{
    time -= 2 * times[timec - 1];
}
if (timec - 2 >= 0)
{
    time += times[timec - 2];
}
timec += 1;